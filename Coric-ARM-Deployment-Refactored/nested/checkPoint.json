{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "globals": {
            "type": "object",
            "metadata": {
                "Description": "Global complex object passed to nested templates"
            }
        },
        "dnsServers": {
            "type": "array",
            "metadata": {
                "description": "The DNS address(es) of the DNS Server(s) used by the VNET"
            }
        },
        "adminPassword": {
            "metadata": {
                "description": "Administrator password"
            },
            "type": "securestring"
        },
        "sicKey": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "One time key for Secure Internal Communication"
            }
        }
    },
    "variables": {
        "basename": "[concat(parameters('globals').baseName, '-cp')]",
        "azureGatewayInternalIPAddress": "[parameters('globals').networkSettings.azureGatewayInternalIPAddress]",
        "customDataOld": "[concat('#!/bin/bash\n', '\n', 'installSecurityGateway=\"', variables('installSecurityGateway'), '\"', '\n', 'installSecurityGateway=\"$(echo $installSecurityGateway | tr \"TF\" \"tf\")\"\n', 'installSecurityManagement=\"', variables('installSecurityManagement'), '\"', '\n', 'installSecurityManagement=\"$(echo $installSecurityManagement | tr \"TF\" \"tf\")\"\n', 'adminPassword=\"', parameters('adminPassword'), '\"', '\n', 'managementGUIClientNetwork=\"', variables('managementGUIClientNetwork'), '\"', '\n', 'ManagementGUIClientBase=\"$(echo $managementGUIClientNetwork | cut -d / -f 1)\"\n', 'ManagementGUIClientMaskLength=\"$(echo $managementGUIClientNetwork | cut -d / -f 2)\"\n', 'sicKey=\"', parameters('sicKey'), '\"', '\n', 'conf=\"install_security_gw=$installSecurityGateway\"\n', 'if $installSecurityGateway; then\n', '    conf=\"${conf}&install_ppak=true\"\n', '    conf=\"${conf}&gateway_cluster_member=false\"\n', 'fi\n', 'conf=\"${conf}&install_security_managment=$installSecurityManagement\"\n', 'if $installSecurityManagement; then\n', '    conf=\"${conf}&install_mgmt_primary=true\"\n', '    conf=\"${conf}&mgmt_admin_name=admin\"\n', '    conf=\"${conf}&mgmt_admin_passwd=$adminPassword\"\n', '    conf=\"${conf}&mgmt_gui_clients_radio=network\"\n', '    conf=\"${conf}&mgmt_gui_clients_ip_field=$ManagementGUIClientBase\"\n', '    conf=\"${conf}&mgmt_gui_clients_subnet_field=$ManagementGUIClientMaskLength\"\n', 'fi\n', 'conf=\"${conf}&ftw_sic_key=$sicKey\"\n', '\n', 'config_system -s $conf\n', '\n', 'clish -c \"set static-route 10.200.0.0/20 nexthop gateway address 10.200.9.1 on\"', '\n', 'clish -c \"save config\"', '\n', 'shutdown -r now\n')]",
        "customDataNew": "[concat('#!/bin/bash\n', '\n', 'installSecurityGateway=\"', variables('installSecurityGateway'), '\"', '\n', 'installSecurityGateway=\"$(echo $installSecurityGateway | tr \"TF\" \"tf\")\"\n', 'installSecurityManagement=\"', variables('installSecurityManagement'), '\"', '\n', 'installSecurityManagement=\"$(echo $installSecurityManagement | tr \"TF\" \"tf\")\"\n', 'adminPassword=\"', parameters('adminPassword'), '\"', '\n', 'managementGUIClientNetwork=\"', variables('managementGUIClientNetwork'), '\"', '\n', 'ManagementGUIClientBase=\"$(echo $managementGUIClientNetwork | cut -d / -f 1)\"\n', 'ManagementGUIClientMaskLength=\"$(echo $managementGUIClientNetwork | cut -d / -f 2)\"\n', 'sicKey=\"', parameters('sicKey'), '\"', '\n', 'conf=\"install_security_gw=$installSecurityGateway\"\n', 'if $installSecurityGateway; then\n', '    conf=\"${conf}&install_ppak=true\"\n', '    conf=\"${conf}&gateway_cluster_member=false\"\n', 'fi\n', 'conf=\"${conf}&install_security_managment=$installSecurityManagement\"\n', 'if $installSecurityManagement; then\n', '    conf=\"${conf}&install_mgmt_primary=true\"\n', '    conf=\"${conf}&mgmt_admin_name=admin\"\n', '    conf=\"${conf}&mgmt_admin_passwd=$adminPassword\"\n', '    conf=\"${conf}&mgmt_gui_clients_radio=network\"\n', '    conf=\"${conf}&mgmt_gui_clients_ip_field=$ManagementGUIClientBase\"\n', '    conf=\"${conf}&mgmt_gui_clients_subnet_field=$ManagementGUIClientMaskLength\"\n', 'fi\n', 'conf=\"${conf}&ftw_sic_key=$sicKey\"\n', '\n', 'config_system -s $conf\n', '\n', 'clish -c \"set static-route ', variables('vnetAddressSpace'), ' nexthop gateway address ', variables('azureGatewayInternalIPAddress'),' on\"', '\n', 'clish -c \"set static-route ', variables('vnetV2addressSpace'), ' nexthop gateway address ', variables('azureGatewayInternalIPAddress'),' on\"', '\n', 'clish -c \"save config\"', '\n', 'shutdown -r now\n')]",
        "customData": "[variables(concat('customData', parameters('globals').adminVnetVersion))]",
        "imageOffer": "[parameters('globals').checkPointOffer]",
        "imagePublisher": "checkpoint",
        "imageReference": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "sg-byol",
            "version": "latest"
        },
        "incomingTraffic": [
            {
                "name": "[concat(parameters('globals').baseName,'-rdg01', parameters('globals').test)]",
                "frontendPort": 443,
                "backendPort": 8443
            },
            {
                "name": "[concat(parameters('globals').baseName,'-rdp', parameters('globals').test)]",
                "frontendPort": 3389,
                "backendPort": 53389
            }
        ],
        "installSecurityGateway": true,
        "installSecurityManagement": false,
        "LB1IPConfigId": "[concat(variables('lbId'), '/frontendIPConfigurations/LB1FrontEnd')]",
        "LB2IPConfigId": "[concat(variables('lbId'), '/frontendIPConfigurations/LB2FrontEnd')]",
        "lbId": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "lbName": "lbCheckPointGateway",
        "managementGUIClientNetwork": "0.0.0.0/0",
        "mgmtNetworkID": "[parameters('globals').networkSettings.mgmtNetworkID]",
        "mgmtNetworkAddressSpace": "[parameters('globals').networkSettings.mgmtNetworkAddressSpace]",
        "nic1Name": "[concat(variables('nicName'), '-Gateway')]",
        "nic2Name": "[concat(variables('nicName'), '-FWInternal')]",
        "nicName": "[concat('nic', variables('basename'))]",
        "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "notused",
            "computerName": "[variables('basename')]",
            "customData": "[base64(variables('customData'))]"
        },
        "pipName": "[concat('pip', variables('basename'))]",
        "plan": {
            "name": "sg-byol",
            "product": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]"
        },
        "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
        "publicIPAddressLB1Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip', variables('incomingTraffic')[0].name))]",
        "publicIPAddressLB2Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip', variables('incomingTraffic')[1].name))]",
        "rdsGatewayNicName": "[variables(concat('rdsGatewayNicName', parameters('globals').adminVnetVersion))]",
        "rdsGatewayNicNameOld": "[concat('nic', variables('rdsGateway').basename, '01')]",
        "rdsGatewayNicNameNew": "[concat('nicadmin-vm', variables('rdsGateway').basename, '01')]",
        "rdsGateway": {
            "basename": "[concat(parameters('globals').baseName, '-rdg')]",
            "ipConfigurations": [
                {
                    "name": "ipconfig",
                    "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('globals').networkSettings.rdgatewayIPAddress]",
                        "subnet": {
                            "id": "[parameters('globals').networkSettings.dmzSubnetID]"
                        }
                    }
                }
            ]
        },
        "routeTableName": "[concat('rt', variables('basename'))]",
        "vmNamePortal": "[concat('vm', variables('basename'))]",
        "vnetName": "[parameters('globals').networkSettings.name]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('globals').networkSettings.name)]",
        "vnetAddressSpace": "[parameters('globals').networkSettings.addressSpace]",
        "vnetV2name": "[parameters('globals').networkSettings.vnetV2name]",
        "vnetV2Id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('globals').networkSettings.vnetV2name)]",
        "vnetV2addressSpace": "[parameters('globals').networkSettings.vnetV2addressSpace]",
        "vnetPeeringName": "[concat(variables('vnetName'), '/', 'vnp', variables('vnetName'), '-', variables('vnetV2name'))]",
        "vnetV2PeeringName": "[concat(variables('vnetV2name'), '/', 'vnp', variables('vnetV2name'), '-', variables('vnetName'))]",
        "vnetV2MgmtNetworkPeeringName": "[concat(variables('vnetV2name'), '/', variables('vnetName'), '-vnMgmtNetwork')]"
    },
    "resources": [
        {
            "apiVersion": "[parameters('globals').apiVersion.nic]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('rdsGatewayNicName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "[variables('rdsGateway').ipConfigurations[0].properties.privateIPAllocationMethod]",
                            "privateIPAddress": "[variables('rdsGateway').ipConfigurations[0].properties.privateIPAddress]",
                            "subnet": "[variables('rdsGateway').ipConfigurations[0].properties.subnet]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableName')]",
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "location": "[resourceGroup().location]",
            "properties": {
                "routes": [
                    {
                        "name": "Route-All",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet1.id, '-', parameters('globals').networkSettings.subnet1.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet1.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet2.id, '-', parameters('globals').networkSettings.subnet2.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet2.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet3.id, '-', parameters('globals').networkSettings.subnet3.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet3.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet4.id, '-', parameters('globals').networkSettings.subnet4.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet4.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet5.id, '-', parameters('globals').networkSettings.subnet5.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet5.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet6.id, '-', parameters('globals').networkSettings.subnet6.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet6.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "[concat('subnet-', parameters('globals').networkSettings.subnet7.id, '-', parameters('globals').networkSettings.subnet7.name)]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet7.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.network]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('globals').networkSettings.name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('routeTableName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('globals').networkSettings.addressSpace]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": "[parameters('dnsServers')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('globals').networkSettings.subnet0.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet0.prefix]"
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet1.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet1.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet2.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet2.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet3.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet3.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet4.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet4.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet5.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet5.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet6.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet6.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet7.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet7.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet8.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet8.prefix]"
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnet9.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnet9.prefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-admin-dmz-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetadmindmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadmindmz.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-admin-domain-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetadmindomain.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadmindomain.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-admin-security-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-prod-desktop-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetproddesktop.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetproddesktop.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-prod-web-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetprodweb.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetprodweb.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-prod-application-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetprodapplication.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetprodapplication.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-prod-database-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetproddatabase.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetproddatabase.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-uat-desktop-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatdesktop.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatdesktop.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-uat-web-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatweb.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatweb.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-uat-application-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatapplication.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatapplication.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-uat-database-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatdatabase.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatdatabase.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-dev-desktop-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevdesktop.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevdesktop.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-dev-web-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevweb.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevweb.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-dev-application-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevapplication.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevapplication.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-dev-database-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevdatabase.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevdatabase.prefix]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-prod-dmz-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetproddmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetproddmz.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-uat-dmz-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatdmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatdmz.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.routeTables]",
            "name": "[concat('rt', variables('vnetV2name'), '-dev-dmz-local')]",
            "type": "Microsoft.Network/routeTables",
            "location": "[resourceGroup().location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevdmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevdmz.prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "default-to-checkpoint",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    },
                    {
                        "name": "vnet-to-checkpoint",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.vnetV2addressSpace]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.network]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetV2name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('globals').networkSettings.vnetV2addressSpace]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": "[parameters('dnsServers')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('globals').networkSettings.subnetadminexternal.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadminexternal.prefix]"
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetadmininternalgateway.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadmininternalgateway.prefix]"
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetadmindmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadmindmz.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-admin-dmz-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetadmindomain.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadmindomain.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-admin-domain-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetadminsecurity.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetadminsecurity.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-admin-security-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetproddesktop.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetproddesktop.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-desktop-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetprodweb.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetprodweb.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-web-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetprodapplication.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetprodapplication.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-application-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetproddatabase.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetproddatabase.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-database-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatdesktop.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatdesktop.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-desktop-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatweb.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatweb.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-web-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatapplication.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatapplication.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-application-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatdatabase.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatdatabase.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-database-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevdesktop.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevdesktop.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-desktop-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevweb.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevweb.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-web-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevapplication.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevapplication.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-application-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetdevdatabase.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetdevdatabase.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-database-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetproddmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetproddmz.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-dmz-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('globals').networkSettings.subnetuatdmz.name]",
                        "properties": {
                            "addressPrefix": "[parameters('globals').networkSettings.subnetuatdmz.prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-dmz-local'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-admin-dmz-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-admin-domain-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-admin-security-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-desktop-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-web-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-application-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-database-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-desktop-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-web-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-application-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-database-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-desktop-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-web-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-application-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-dev-database-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-prod-dmz-local'))]",
                "[resourceId('Microsoft.Network/routeTables', concat('rt', variables('vnetV2name'), '-uat-dmz-local'))]"
            ]
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.networkpeerings]",
            "name": "[variables('vnetPeeringName')]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[variables('vnetV2Id')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetV2addressSpace')]"
                    ]
                }
            },
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('vnetV2Id')]"
            ]
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.networkpeerings]",
            "name": "[variables('vnetV2PeeringName')]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[variables('vnetId')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressSpace')]"
                    ]
                }
            },
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('vnetV2Id')]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', variables('vnetName'), concat('vnp', variables('vnetName'), '-', variables('vnetV2name')))]"
            ]
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.networkpeerings]",
            "name": "[variables('vnetV2MgmtNetworkPeeringName')]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[variables('mgmtNetworkID')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[variables('mgmtNetworkAddressSpace')]"
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetV2name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[parameters('globals').apiVersion.pip]",
            "location": "[resourceGroup().location]",
            "name": "[variables('pipName')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(toLower(variables('basename')),parameters('globals').test)]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[parameters('globals').apiVersion.pip]",
            "location": "[resourceGroup().location]",
            "name": "[concat('pip', variables('incomingTraffic')[0].name)]",
            "dependsOn": [
                "[concat('nic', variables('rdsGateway').basename, '01')]"
            ],
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('incomingTraffic')[0].name]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[parameters('globals').apiVersion.pip]",
            "location": "[resourceGroup().location]",
            "name": "[concat('pip', variables('incomingTraffic')[1].name)]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('incomingTraffic')[1].name]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "[parameters('globals').apiVersion.loadBalancer]",
            "dependsOn": [
                "[variables('publicIPAddressLB1Id')]",
                "[variables('publicIPAddressLB2Id')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[variables('lbName')]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LB1FrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressLB1Id')]"
                            }
                        }
                    },
                    {
                        "name": "LB2FrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressLB2Id')]"
                            }
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('incomingTraffic')[0].name]",
                        "properties": {
                            "backendPort": "[variables('incomingTraffic')[0].backendPort]",
                            "frontendIPConfiguration": {
                                "id": "[variables('LB1IPConfigId')]"
                            },
                            "frontendPort": "[variables('incomingTraffic')[0].frontendPort]",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "[variables('incomingTraffic')[1].name]",
                        "properties": {
                            "backendPort": "[variables('incomingTraffic')[1].backendPort]",
                            "frontendIPConfiguration": {
                                "id": "[variables('LB2IPConfigId')]"
                            },
                            "frontendPort": "[variables('incomingTraffic')[1].frontendPort]",
                            "protocol": "tcp"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[parameters('globals').apiVersion.nic]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('lbId')]",
                "[variables('publicIPAddressId')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[variables('nic1Name')]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[parameters('globals').networkSettings.gatewayExternalIPAddress]",
                            "privateIPAllocationMethod": "Static",
                            "PublicIpAddress": {
                                "Id": "[variables('publicIPAddressId')]"
                            },
                            "subnet": {
                                "id": "[parameters('globals').networkSettings.gatewayExternalSubnetID]"
                            },
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/', variables('incomingTraffic')[0].name)]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/', variables('incomingTraffic')[1].name)]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[parameters('globals').apiVersion.nic]",
            "dependsOn": [
                "[variables('vnetId')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[variables('nic2Name')]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[parameters('globals').networkSettings.gatewayInternalSubnetID]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[parameters('globals').apiVersion.virtualMachine]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'))]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[variables('vmNamePortal')]",
            "plan": "[variables('plan')]",
            "properties": {
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://', parameters('globals').storageAccountDiagnostics, '.blob.core.windows.net')]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": "[variables('osProfile')]",
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "osDisk",
                        "vhd": {
                            "uri": "[concat('http://', parameters('globals').storageAccountAdmin, '.blob.core.windows.net/', parameters('globals').vhdContainerName, '/', variables('vmNamePortal'), '-OS.vhd')]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "Gateway": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressId')).IpAddress]"
        },
        "WebApp1": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressLB1Id')).IpAddress]"
        },
        "WebApp2": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressLB2Id')).IpAddress]"
        }
    }
}
