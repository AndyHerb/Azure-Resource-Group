{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "globals": {
      "type": "object",
      "metadata": {
        "Description": "Global complex object passed to nested templates"
      }
    },

    "machineSettings": {
      "metadata": {
        "Description": "Machine settings object"
      },
      "type": "object"
    },

    "adminPassword": {
      "metadata": {
        "Description": "Administrator password for the VM"
      },
      "type": "securestring"
    },

    "domainAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Domain admin password"
      }
    },

    "copyIndexOffset": {
      "metadata": {
        "Description": "Number to start copy index from"
      },
      "type": "int",
      "defaultValue": 1,
      "minValue": 1
    }
  },

  "variables": {
    "keyVaultResourceId": "[resourceId(parameters('globals').diskEncryption.keyVaultResourceGroup, 'Microsoft.KeyVault/vaults', parameters('globals').diskEncryption.keyVaultName)]",
    "nicName": "[toLower(concat('nic', parameters('machineSettings').basename))]",
    "asName": "[toLower(concat('as', parameters('machineSettings').basename))]",
    "pipName": "[toLower(concat('pip', parameters('machineSettings').basename))]",
    "vmName": "[parameters('machineSettings').basename]",
    "vmNamePortal": "[concat('vm', parameters('machineSettings').basename)]"
  },

  "resources": [
    {
      "apiVersion": "[parameters('globals').apiVersion.nic]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "properties": {
        "ipConfigurations": "[parameters('machineSettings').ipConfigurations]",
        "dnsSettings": {
          "dnsServers": [
            "[parameters('globals').networkSettings.dc01IPAddress]",
            "[parameters('globals').networkSettings.dc02IPAddress]"
          ]
        }
      }
    },

    {
      "name": "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('machineSettings').publicIPTemplateLink]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersionPIP": {
            "value": "[parameters('globals').apiVersion.pip]"
          },
          "apiVersionNIC": {
            "value": "[parameters('globals').apiVersion.nic]"
          },
          "pipName": {
            "value": "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          },
          "nicName": {
            "value": "[concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          },
          "dnsPrefix": {
            "value": "[concat(variables('vmName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          },
          "ipConfigurations": {
            "value": "[parameters('machineSettings').ipConfigurations]"
          }
        }
      }
    },

    {
      "apiVersion": "[parameters('globals').apiVersion.availabilitySets]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(variables('asName'))]",
      "location": "[resourceGroup().location]"
    },

    {
      "apiVersion": "[parameters('globals').apiVersion.virtualMachine]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "dependsOn": [
        "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
        "[variables('asName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('asName')))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('machineSettings').imageReference.size]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
          "adminUsername": "[parameters('machineSettings').adminUsername]",
          "adminPassword": "[parameters('adminPassword')]",
          "secrets": [
            {
              "sourceVault": {
                "id": "[variables('keyVaultResourceId')]"
              },
              "vaultCertificates": [
                {
                  "certificateUrl": "[parameters('globals').diskEncryption.keyVaultCertificateURL]",
                  "certificateStore": "My"
                }
              ]
            }
          ]
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('machineSettings').imageReference.publisher]",
            "offer": "[parameters('machineSettings').imageReference.offer]",
            "sku": "[parameters('machineSettings').imageReference.sku]",
            "version": "[parameters('machineSettings').imageReference.version]"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-1-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', parameters('machineSettings').storageAccount, '.blob.core.windows.net/', parameters('globals').vhdContainerName, '/', concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0')),'-OS.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', parameters('globals').storageAccountDiagnostics, '.blob.core.windows.net')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-DataDisk')]",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "dependsOn": [
        "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('machineSettings').dataDiskTemplateLink]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          },
          "machineSettings": {
            "value": "[parameters('machineSettings')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-Extensions')]",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "dependsOn": [
        "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-DataDisk')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('globals').templateLinkExtensions]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          },
          "encryptionTemplateLink": {
            "value": "[parameters('machineSettings').encryptionTemplateLink]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-SQLKeyVault')]",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "dependsOn": [
        "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-Extensions')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('machineSettings').sqlKeyVaultTemplateLink]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-DomainJoin')]",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('machineSettings').numberOfVMs]"
      },
      "dependsOn": [
        "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-SQLKeyVault')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('machineSettings').domainJoinTemplateLink]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
          },
          "ouPath": {
            "value": "[parameters('machineSettings').ouPath]"
          },
          "domainAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          }
        }
      }
    }

  ]
}
