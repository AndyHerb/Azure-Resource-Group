{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "North Europe",
      "allowedValues": [ "East US", "West US", "North Europe", "West Europe", "East Asia", "South East Asia" ],
      "metadata": {
        "description": "Location to deploy to"
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "cor",
      "metadata": {
        "description": "Characters used for the prefix of each Azure object."
      }
    },
    "clientID": {
      "type": "int",
      "metadata": {
        "description": "Unique ClientID for the system."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Domain admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Domain admin password"
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2"
      ],
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "domainControllerCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Domain Controller VMs to deploy"
      }
    },
    "storageAccountType": {
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "Description": "The type of the Storage Account created"
      },
      "type": "string"
    }
  },

  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "baseurl": "https://raw.githubusercontent.com/AndyHerb/Azure-Resource-Group/master/Coric-ARM-Deployment",
    "concatonatedString": "[concat(parameters('prefix'), variables('paddedClientID'))]",
    "paddedClientID": "[padLeft(parameters('clientID'),4,'0')]",
    "resourceGroup": "[concat('rg',variables('concatonatedString'))]",
    "storageAccountName": "[concat('sa', variables('concatonatedString'))]",
    "storageAccountSetupURL": "[concat(variables('baseUrl'),'/storageAccount-','storageaccount-new.json')]",
    "vmStorageAccountContainerName": "vhds",
    "vnetName": "[concat('vn', variables('concatonatedString'))]",
    "vnetSetupURL": "[concat(variables('baseUrl'),'/storageAccount-','virtualnetwork.json')]"
  },

  "resources": [
    {
			"name": "storageAcountSetup",
			"type": "Microsoft.Resources/deployments",
			"apiVersion" : "2015-01-01",
			"properties" : {
				"mode": "Incremental",
				"templateLink" : {
					"uri" : "[variables('storageAccountSetupURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters" : {
					"location": {
						"value": "[parameters('location')]"
					},
					"storageAccountType": {
						"value": "[parameters('storageAccountType')]"
					},
					"storageAccountName" : {
						"value": "[variables('storageAccountName')]"
					},
					"resourceGroup": {
						"value": "[variables('resourceGroup')]"
					}
				}
			}
		},

    {
      "name": "virtualNetworkSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clientID": {
            "value": "[parameters('clientID')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    }

  ]
}