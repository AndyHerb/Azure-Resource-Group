{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSettings": {
      "type": "object",
      "metadata": {
        "Description": "VM settings object"
    },

    "networkSettings": {
      "type": "object",
      "metadata": {
        "Description": "Network settings object"
      }
    }
  },

  "variables": {
      "paddedClientID": "[padLeft(parameters('clientID'),4,'0')]",
      "concatonatedString": "[concat(parameters('prefix'), variables('paddedClientID'))]",
      "storageAccountName": "[concat('sa', variables('concatonatedString'))]",
      "storageAccountType": "Standard_LRS",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
      "vmStorageAccountContainerName": "vhds",

      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "vhdContainer": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]"
  },

  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('vmPIP', copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmPIPLoop",
        "count": "[parameters('numberOfVMs')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('vmNic', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmNicLoop",
        "count": "[parameters('numberOfVMs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', 'vmPIP', copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('vmPIP', copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfVMs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'vmNic', copyindex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'),copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku" : "[parameters('windowsOSVersion')]",
            "version":"latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),copyindex(),'-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat(variables('vhdContainer'),variables('vmName'),copyindex(),'-osDisk','.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('vmNic', copyindex()))]"
            }
          ]
        }
      }
    }
  ]
}
