{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "West Europe",
      "allowedValues": ["East US", "West US", "West Europe", "East Asia", "South East Asia"],
      "metadata": {
        "description": "Location to deploy to"
      }
    },

    "prefix": {
      "type": "string",
      "defaultValue": "cor",
      "metadata": {
        "description": "Characters used for the prefix of each Azure object."
      }
    },

    "clientID": {
      "type": "int",
      "metadata": {
        "description": "Unique ClientID for the system."
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin user name"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },

    "numberOfDrones": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Drones to create"
      }
    },

    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },

    "droneVMSize": {
      "type": "string",
      "defaultValue": "Basic_A0",
      "allowedValues": [
        "Basic_A0",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2"
      ],
      "metadata": {
          "description": "VM size of the Drone"
      }
    }
  },

  "variables": {
      "paddedClientID": "[padLeft(parameters('clientID'),4,'0')]",
      "concatonatedString": "[concat(parameters('prefix'), variables('paddedClientID'))]",
      "storageAccountName": "[concat('sa', variables('concatonatedString'))]",
      "storageAccountType": "Standard_LRS",
      "vmStorageAccountContainerName": "vhds",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "vhdContainer": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',[variables('networkSettings').virtualNetworkName])]",
      "networkSettings": {
        "virtualNetworkName": "[concat('vn', variables('concatonatedString'))]",
        "addressPrefix": "[concat('10.', parameters('clientID'), '.0.0/16')]",
        "subnet2": {
          "name": "backend",
          "prefix": "[concat('10.', parameters('clientID'), '.2.0/24')]"
        },
        "subnet3": {
          "name": "user",
          "prefix": "[concat('10.', parameters('clientID'), '.3.0/24')]"
        },
        "subnet4": {
          "name": "frontend",
          "prefix": "[concat('10.', parameters('clientID'), '.4.0/24')]"
        }
      },
      "vmDrone": {
        "vmName": "[concat(variables('concatonatedString'), '-d-dr')]",
        "location": "",
        "prefix": "[parameters('prefix')]",
        "clientID": "[parameters('clientID')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "numberOfVMs": "[parameters('numberOfVMs')]",
        "windowsOSVersion": "[parameters('windowsOSVersion')]",
        "dVMSize": "[parameters('vmVMSize')]",
        "networkSettings": "[variables('networkSettings')]"
        },
    },

    "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('StorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
  	},

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('networkSettings').virtualNetworkName]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkSettings').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('networkSettings').subnet2.name]",
            "properties" : {
                "addressPrefix": "[variables('networkSettings').subnet2.prefix]"
            }
  	      },
          {
            "name": "[variables('networkSettings').subnet3.name]",
            "properties" : {
                "addressPrefix": "[variables('networkSettings').subnet3.prefix]"
            }
  	      },
          {
            "name": "[variables('networkSettings').subnet4.name]",
            "properties" : {
                "addressPrefix": "[variables('networkSettings').subnet4.prefix]"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-01-01",
      "name": "nestedDrone",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', [variables('networkSettings').virtualNetworkName])]",
        "[concat('Microsoft.Storage/storageAccounts/', [variables('StorageAccountName')])]"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
            "uri":"[variables('templatelink')]","contentVersion":"1.0.0.0"
        },
        "parameters": {
          "vmSettings": {"value":"[variables('vmDrone')]"},
          "networkSettings": {"value":"[variables('networkSettings')]"}
        }
      }
    }
  ]
}
