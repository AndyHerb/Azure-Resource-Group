{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "globals": {
      "metadata": {
        "Description": "Global complex object passed to nested templates"
      },
      "type": "object"
    },

    "domainAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Domain admin password"
      }
    },

    "localAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Local admin password"
      }
    }
  },

  "variables": {
    "acronym": "[toLower(parameters('globals').environment.acronym)]",
    "desktop": {
      "adminUsername": "[parameters('globals').localAdminUsername]",
      "basename": "[concat(parameters('globals').baseName, '-', variables('acronym'), '-dt')]",
      "dataDiskTemplateLink": "[parameters('globals').templateLinkDataDiskNull]",
      "domainJoinTemplateLink": "[parameters('globals').templateLinkDomainJoin]",
      "encryptionTemplateLink": "[parameters('globals').templateLinkDiskEncryption]",
      "imageReference": "[parameters('globals').windowsVM]",
      "ipConfigurations": [
        {
          "name": "ipconfig",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
              "id": "[concat(variables('vnetID'),'/subnets/', parameters('globals').networkSettings.subnet5.name)]"
            }
          }
        }
      ],
      "numberOfVMs": "[parameters('globals').environment.desktopCount]",
      "ouPath": "[concat(parameters('globals').ou.desktop, parameters('globals').ou.serverRoles)]",
      "publicIPTemplateLink": "[parameters('globals').templateLinkPublicIPNull]",
      "sqlKeyVaultTemplateLink": "[parameters('globals').templateLinkSQLKeyVaultNull]",
      "storageAccount": "[variables('storageAccountName')]"
    },

    "drone": {
      "adminUsername": "[parameters('globals').localAdminUsername]",
      "basename": "[concat(parameters('globals').baseName, '-', variables('acronym'), '-dr')]",
      "dataDiskTemplateLink": "[parameters('globals').templateLinkDataDiskNull]",
      "domainJoinTemplateLink": "[parameters('globals').templateLinkDomainJoin]",
      "encryptionTemplateLink": "[parameters('globals').templateLinkDiskEncryption]",
      "imageReference": "[parameters('globals').windowsVM]",
      "ipConfigurations": [
        {
          "name": "ipconfig",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
              "id": "[concat(variables('vnetID'),'/subnets/', parameters('globals').networkSettings.subnet3.name)]"
            }
          }
        }
      ],
      "numberOfVMs": "[parameters('globals').environment.droneCount]",
      "ouPath": "[concat(parameters('globals').ou.drone, parameters('globals').ou.serverRoles)]",
      "publicIPTemplateLink": "[parameters('globals').templateLinkPublicIPNull]",
      "sqlKeyVaultTemplateLink": "[parameters('globals').templateLinkSQLKeyVaultNull]",
      "storageAccount": "[variables('storageAccountName')]"
    },

    "storageAccountName": "[concat('sa', parameters('globals').baseName, toLower(parameters('globals').environment.shortname))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('globals').networkSettings.name)]",

    "warehouseBasename": "[concat(parameters('globals').baseName, '-', variables('acronym'), '-iis')]",
    "warehouse": {
      "adminUsername": "[parameters('globals').localAdminUsername]",
      "basename": "[variables('warehouseBasename')]",
      "dataDiskTemplateLink": "[parameters('globals').templateLinkDataDisk]",
      "dataDisks": [
        {
          "name": "[concat(variables('warehouseBasename'), '01-datadisk-0')]",
          "diskSizeGB": "[parameters('globals').dataDiskSizes.warehouse]",
          "lun": 0,
          "vhd": {
            "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/', parameters('globals').vhdContainerName, '/', variables('warehouseBasename'), '01-Data0.vhd')]"
          },
          "createOption": "Empty"
        }
      ],
      "domainJoinTemplateLink": "[parameters('globals').templateLinkDomainJoin]",
      "encryptionTemplateLink": "[parameters('globals').templateLinkDiskEncryption]",
      "imageReference": "[parameters('globals').windowsVM]",
      "ipConfigurations": [
        {
          "name": "ipconfig",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
              "id": "[concat(variables('vnetID'),'/subnets/', parameters('globals').networkSettings.subnet4.name)]"
            }
          }
        }
      ],
      "numberOfVMs": 1,
      "ouPath": "[concat(parameters('globals').ou.iis, parameters('globals').ou.serverRoles)]",
      "publicIPTemplateLink": "[parameters('globals').templateLinkPublicIPNull]",
      "sqlKeyVaultTemplateLink": "[parameters('globals').templateLinkSQLKeyVaultNull]",
      "storageAccount": "[variables('storageAccountName')]"
    }
  },

  "resources": [
    {
      "name": "environmentStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('globals').storageAccountTemplateLink]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "Name": {
            "value": "[variables('storageAccountName')]"
          },
          "accountType": {
            "value": "[parameters('globals').storageType]"
          }
        }
      }
    },


    {
      "name": "warehouseSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'environmentStorage')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('globals').templateLinkVirtualMachine]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "machineSettings": {
            "value": "[variables('warehouse')]"
          },
          "adminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          }
        }
      }
    },

    {
      "name": "droneSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'environmentStorage')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('globals').templateLinkVirtualMachine]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "machineSettings": {
            "value": "[variables('drone')]"
          },
          "adminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          }
        }
      }
    },

    {
      "name": "desktopSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('globals').apiVersion.deployment]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'environmentStorage')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('globals').templateLinkVirtualMachine]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "globals": {
            "value": "[parameters('globals')]"
          },
          "machineSettings": {
            "value": "[variables('desktop')]"
          },
          "adminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          }
        }
      }
    }
  ]
}